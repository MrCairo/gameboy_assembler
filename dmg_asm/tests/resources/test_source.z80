SECTION "game_vars", WRAM0
CLOUDS_X: DS 001
BUILDINGS_X: DS 001
FLOOR_X: DS 001
PARALLAX_DELAY_TIMER: DS 001
FADE_IN_ACTIVE:: DS 001
FADE_STEP: DS 001
ALLOW_PARALLAX:: DS 001
READ_INPUT:: DS 001
START_PLAY:: DS 001

SECTION "game", ROMX

INCLUDE "game_map.inc"
; INCLUDE "includes/menu_map.inc"
; INCLUDE "includes/sprite_tiles.inc"
INCLUDE "constants.z80"

DEF PARALLAX_DELAY EQU $02
DEF FADE_FACT EQU 002
DEF FADE_FACE_OFFSET EQU $30

update_game::
    ld HL, READ_INPUT
    ld A, [HL]
.continue_update_1:
    cp $00
    jr nz, .continue_update_1
    call read_joypad
.continue_update_1:
    call pipes_update
    call player_update
    call player_set_position
    call pipes_set_position
    ld HL, FADE_IN_ACTIVE
    ld A, [HL]
    cp $00
    jr z, .call_fade_in
    cp $02
    jr z, .call_fade_out
    jr .call_parallax
.call_fade_in:
    call fade_in
    jr .call_parallax
.call_fade_out:
    call fade_out
.call_parallax:
    ld HL, ALLOW_PARALLAX
    ld A, [HL]
    cp $00
    jr z, .do_parallax
.no_parallax:
    call apply_parallax
    jr .continue_update_0
.do_parallax:
    ;xor A
    call parallax
.continue_update_0:
.end_update:
    ret

fade_out::
    ld HL, FADE_STEP
    ld A, [HL]
    cp FADE_FACE_OFFSET ; + (FADE_FACT * 0)
    jr z, .fade_0
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 1)
    jr z, .fade_1
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 2)
    jr z, .fade_2
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 3)
    jr z, .fade_3
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 4)
    jr z, .fade_4
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 5)
    jr z, .fade_5
    cp FADE_FACE_OFFSET ;+ (FADE_FACT * 6)
    jr z, .reset_fade
    jr .end_fade
.fade_0:
    ld HL, LCD_BG_PAL
    ld [HL], %11100100
    ld HL, OBJ0_PAL
    ld [HL], %11100100
    ld HL, OBJ1_PAL
    ld [HL], %11010000
    jr .end_fade
.fade_1:
    ld HL, LCD_BG_PAL
    ld [HL], %11111001
    ld HL, OBJ0_PAL
    ld [HL], %11111001
    ld HL, OBJ1_PAL
    ld [HL], %11111001
    jr .end_fade
.fade_2:
    ld HL, LCD_BG_PAL
    ld [HL], %11111001
    ld HL, OBJ0_PAL
    ld [HL], %11111001
     ld HL, OBJ1_PAL
    ld [HL], %11111001
   jr .end_fade
.fade_3:
    ld HL, LCD_BG_PAL
    ld [HL], %11111110
    ld HL, OBJ0_PAL
    ld [HL], %11111110
    ld HL, OBJ1_PAL
    ld [HL], %11111110
   jr .end_fade
.fade_4:
    ld HL, LCD_BG_PAL
    ld [HL], %11111110
    ld HL, OBJ0_PAL
    ld [HL], %11111110
    ld HL, OBJ1_PAL
    ld [HL], %11111110
    jr .end_fade
.fade_5:
    ld HL, LCD_BG_PAL
    ld [HL], %11111111
    ld HL, OBJ0_PAL
    ld [HL], %11111111
    ld HL, OBJ1_PAL
    ld [HL], %11111111
    jr .end_fade
.end_fade:
    ld HL, FADE_STEP
    inc [HL]
    jr .end_0
.reset_fade:
    ld HL, FADE_STEP
    ld [HL], $00
    ld HL, FADE_IN_ACTIVE
    ld [HL], $01
    ld HL, LCD_BG_PAL
    ld [HL], %11100100
    ld HL, OBJ0_PAL
    ld [HL], %11100100
    ld HL, OBJ1_PAL
    ld [HL], %11100000
    jp start_menu
.end_0:
    ret

.fade_0:
    ld HL, LCD_BG_PAL
    ld [HL], %11111111
    ld HL, OBJ0_PAL
    ld [HL], %11111111
    ld HL, OBJ1_PAL
    ld [HL], %11111111
    jr .end_fade
.fade_1:
    ld HL, LCD_BG_PAL
    ld [HL], %11111110
    ld HL, OBJ0_PAL
    ld [HL], %11111110
    ld HL, OBJ1_PAL
    ld [HL], %11111110
    jr .end_fade
.fade_2:
    ld HL, LCD_BG_PAL
    ld [HL], %11111110
    ld HL, OBJ0_PAL
    ld [HL], %11111110
    ld HL, OBJ1_PAL
    ld [HL], %11111110
    jr .end_fade
.fade_3:
    ld HL, LCD_BG_PAL
    ld [HL], %11111001
    ld HL, OBJ0_PAL
    ld [HL], %11111001
    ld HL, OBJ1_PAL
    ld [HL], %11111001
    jr .end_fade
.fade_4:
    ld HL, LCD_BG_PAL
    ld [HL], %11111001
    ld HL, OBJ0_PAL
    ld [HL], %11111001
    ld HL, OBJ1_PAL
    ld [HL], %11111001
    jr .end_fade
.fade_5:
    ld HL, LCD_BG_PAL
    ld [HL], %11100100
    ld HL, OBJ0_PAL
    ld [HL], %11100100
    ld HL, OBJ1_PAL
    ld [HL], %11010000
    jr .end_fade
.end_fade:
    ld HL, FADE_STEP
    inc [HL]
    jr .end_0
.reset_fade:
    ld HL, FADE_STEP
    ld [HL], $00
    ld HL, FADE_IN_ACTIVE
    ld [HL], $01
    ld HL, LCD_BG_PAL
    ld [HL], %11100100
    ld HL, OBJ0_PAL
    ld [HL], %11100100
    ld HL, OBJ1_PAL
    ld [HL], %11010000
.end_0:
    ret

parallax::
    ld HL, PARALLAX_DELAY_TIMER
    inc [HL]
    ; Check if timer is done
    ld A, [HL]
    cp PARALLAX_DELAY
    jr nz, apply_parallax
.increment_parallax:
    ld HL, CLOUDS_X
    inc [HL]
    ld HL, BUILDINGS_X
    inc [HL]
    inc [HL]
    ld HL, FLOOR_X
    inc [HL]
    inc [HL]
    inc [HL]
    ld HL, PARALLAX_DELAY_TIMER
    ld [HL], $00
apply_parallax:
    call animate_parallax
    ret
animate_parallax:
    ld HL, CLOUDS_X
    ld A, [HL]
    ld HL, LCD_SCROLL_X
    ld [HL], A
.wait_for_ly_101:
    ld A, [$FF44]
    cp 101
    jr nz, .wait_for_ly_101
    
    ld HL, BUILDINGS_X
    ld A, [HL]
    ld HL, LCD_SCROLL_X
    ld [HL], A
.wait_for_ly_122:
    ld A, [$FF44]
    cp 122
    jr nz, .wait_for_ly_122

    ld HL, FLOOR_X
    ld A, [HL]
    ld HL, LCD_SCROLL_X
    ld [HL], A
.wait_for_ly_135:
    ld A, [$FF44]
    cp 135
    jr nz, .wait_for_ly_135

    ret

load_game_data::
    ld HL, START_PLAY
    ld [HL], $00
    ld HL, READ_INPUT
    ld [HL], $00
    ld HL, ALLOW_PARALLAX
    ld [HL], $00
    ld HL, FADE_STEP
    ld [HL], $00
    ld HL, FADE_IN_ACTIVE
    ld [HL], $00
    ld HL, PARALLAX_DELAY_TIMER
    ld [HL], $00
    ld HL, CLOUDS_X
    ld [HL], $00
    ld HL, BUILDINGS_X
    ld [HL], $00
    ld HL, FLOOR_X
    ld [HL], $00
    ld HL, $FF40
    ; disable CHR
    set 3, [HL]
    ; enable BG
    res 4, [HL]
    ; set BG palette
    ld HL, LCD_BG_PAL
    ld [HL], %11100100
    ; load top tile map to vram (background)
    ld DE, VRAM_MAP_BLOCK0_SIZE
    ld BC, background_tile_data ; $4168
    ld HL, VRAM_TILES_BACKGROUND
    call memcpy
    ; Load flappy sprites
    ld DE, flappy_sprite_tile_data_size
    ld BC, flappy_sprite_tile_data
    ld HL, VRAM_TILES_MIX
    call memcpy
    call player_sprite_init
    call pipes_load_sprites

    ; Load tile data
    call .load_menu_tiles_0
    call .load_menu_tiles_1
    ret

